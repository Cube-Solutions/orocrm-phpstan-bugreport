<?php return [
'closures' => [
    'data["theme"].getIcon(context["theme"])!=null' => static function ($context, $data) { return ($data["theme"]->getIcon($context["theme"]) != null); },
    'data["asset"].getUrl(data["theme"].getIcon(context["theme"]))' => static function ($context, $data) { return $data["asset"]->getUrl($data["theme"]->getIcon($context["theme"])); },
    'data["theme"].getStylesOutput(context["theme"])' => static function ($context, $data) { return $data["theme"]->getStylesOutput($context["theme"]); },
    'data["theme"].getStylesOutput(context["theme"], "print_styles")' => static function ($context, $data) { return $data["theme"]->getStylesOutput($context["theme"], "print_styles"); },
    'data["embedded_form_entity"].getSuccessMessage()' => static function ($context, $data) { return $data["embedded_form_entity"]->getSuccessMessage(); },
    'data["embedded_form_entity"].getId()' => static function ($context, $data) { return $data["embedded_form_entity"]->getId(); },
    'data["embedded_form_entity"].getCss()' => static function ($context, $data) { return $data["embedded_form_entity"]->getCss(); },
    'data["embedded_form_session_id_field_name"]' => static function ($context, $data) { return $data["embedded_form_session_id_field_name"]; },
    'data["embedded_form_session_id"]' => static function ($context, $data) { return $data["embedded_form_session_id"]; },
    'data["translator"].getTrans(data["transition"].getMessage(),[],"workflows")' => static function ($context, $data) { return $data["translator"]->getTrans($data["transition"]->getMessage(), [], "workflows"); },
    '((data["transition"].getMessage()!="")&&(data["translator"].getTrans(data["transition"].getMessage(),[],"workflows")!=data["transition"].getMessage()))' => static function ($context, $data) { return (($data["transition"]->getMessage() != "") && ($data["translator"]->getTrans($data["transition"]->getMessage(), [], "workflows") != $data["transition"]->getMessage())); },
    'data["transitionFormView"]' => static function ($context, $data) { return $data["transitionFormView"]; },
    'data["formRouteName"]' => static function ($context, $data) { return $data["formRouteName"]; },
    'data["workflowItem"].getId()' => static function ($context, $data) { return $data["workflowItem"]->getId(); },
    'data["transition"].getName()' => static function ($context, $data) { return $data["transition"]->getName(); },
    'data["originalUrl"]' => static function ($context, $data) { return $data["originalUrl"]; },
    'data["workflowName"]' => static function ($context, $data) { return $data["workflowName"]; },
    'data["transitionName"]' => static function ($context, $data) { return $data["transitionName"]; },
    'data["entityId"]' => static function ($context, $data) { return $data["entityId"]; },
    'data["asset"].getUrl(data["theme"].getLogo(context["theme"]))' => static function ($context, $data) { return $data["asset"]->getUrl($data["theme"]->getLogo($context["theme"])); },
],
'closuresWithExtraParams' => [
    'data["title_provider"].getTitle(context["route_name"], params)' => [static function ($context, $data, $params) { return $data["title_provider"]->getTitle($context["route_name"], $params); }, ['params']],
    'defaultValue' => [static function ($context, $data, $defaultValue) { return $defaultValue; }, ['defaultValue']],
    'data["breadcrumb_provider"].getBreadcrumbs(menu_name)' => [static function ($context, $data, $menu_name) { return $data["breadcrumb_provider"]->getBreadcrumbs($menu_name); }, ['menu_name']],
    'data["property_accessor"].getValue(entity, fieldName)' => [static function ($context, $data, $entity, $fieldName) { return $data["property_accessor"]->getValue($entity, $fieldName); }, ['entity', 'fieldName']],
    'value !== null' => [static function ($context, $data, $value) { return ($value !== null); }, ['value']],
    'data["attachment_config"].getConfig(className, fieldName).get("width")' => [static function ($context, $data, $className, $fieldName) { return $data["attachment_config"]->getConfig($className, $fieldName)->get("width"); }, ['className', 'fieldName']],
    'data["attachment_config"].getConfig(className, fieldName).get("height")' => [static function ($context, $data, $className, $fieldName) { return $data["attachment_config"]->getConfig($className, $fieldName)->get("height"); }, ['className', 'fieldName']],
    'data["locale"].getLocalizedValue(value)' => [static function ($context, $data, $value) { return $data["locale"]->getLocalizedValue($value); }, ['value']],
]
];